name: Build App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Init Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
          
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
          cache: true
      - run: flutter --version

      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Get packages
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Update Release
        id: update_release
        uses: actions/github-script@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { Octokit } = require("@octokit/rest");
            const fs = require("fs");
            
            const octokit = new Octokit({
              auth: process.env.GITHUB_TOKEN
            });
            
            async function updateRelease() {
              const response = await octokit.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: 'v1.0'
              });
              const release = response.data.find(r => r.tag_name === 'v1.0');
              
              const filePath = 'build/app/outputs/flutter-apk/app-release.apk';
              const fileContent = await fs.promises.readFile(filePath);
              
              const commitMessage = context.payload.head_commit.message;
              const releaseBody = `Latest commit: ${commitMessage}`;
              
              await octokit.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id,
                name: 'Dev Release',
                body: releaseBody
              });
              
              await octokit.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id,
                name: 'app-release.apk',
                data: fileContent
              });
            }
            
            updateRelease();
